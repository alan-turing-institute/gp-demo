import{t as ft,a as nt}from"../chunks/Dl42bQaK.js";import"../chunks/Cns6LDpP.js";import{a5 as kt,ab as zt,ac as At,aa as Vt,a6 as Ct,s as m,a7 as h,i as Et,e as l,ad as z,a2 as S,a8 as p,a9 as It}from"../chunks/C_nTGglK.js";import{e as U,s as L}from"../chunks/D15B_ygG.js";import{i as Rt}from"../chunks/BiG_kpbh.js";import{s as j}from"../chunks/CThLS2ih.js";import{l as st,s as Wt,c as Ft}from"../chunks/CSJ2tm9-.js";import{b as rt}from"../chunks/BOcuyyEv.js";import{i as Gt}from"../chunks/-d2lr63c.js";import{o as $t}from"../chunks/BfnemT7e.js";import{r as q,s as Ht,v as ct,z as dt,l as Lt,m as jt}from"../chunks/Di72JI2_.js";var qt=ft('<button class="svelte-i0d8w">Clear Samples</button>'),Xt=ft('<main class="svelte-i0d8w"><h1 class="svelte-i0d8w">Astroid with Velocity Vector Explorer</h1> <div class="container svelte-i0d8w"><div class="panel svelte-i0d8w"><h2 class="svelte-i0d8w">Astroid Visualization</h2> <canvas class="svelte-i0d8w"></canvas></div> <div class="panel svelte-i0d8w"><h2 class="svelte-i0d8w">Energy Landscape</h2> <div class="contour-container svelte-i0d8w"><canvas></canvas></div> <div class="info svelte-i0d8w"><p class="svelte-i0d8w"> </p> <p class="svelte-i0d8w"> </p> <div class="instruction svelte-i0d8w"><p class="highlight svelte-i0d8w">Click on the plot above to add sample points and update the GP model</p></div> <div class="button-group svelte-i0d8w"><!> <button class="info-button svelte-i0d8w"> </button></div> <div class="energy-function svelte-i0d8w"><h3 class="svelte-i0d8w">About the Visualization:</h3> <p class="svelte-i0d8w"> </p> <p class="svelte-i0d8w">The energy function (flyby distance) represents the closest approach distance given an objectâ€™s hyperbolic speed and impact parameter. A value of 0 indicates a collision with Earth.</p> <p class="svelte-i0d8w">Click directly on the plot to add sample points and build a GP model that learns this landscape.</p></div></div></div></div></main>');function ee(gt,vt){kt(vt,!1);const P={primary:"#3c6382",accent:"#60a3bc",highlight:"#6a89cc",text:"#2c3e50"};let _=z(5e3),T=z(3),b=z([]),A=[],k=z(),V=z(),E=z(!1),I=z(!1);const w=6371;function ht(t,r,d=398600.4418,i=6371){const e=Math.sqrt(1+Math.pow(r,2)*Math.pow(t,4)/Math.pow(d,2)),o=d*(e-1)/Math.pow(t,2);return o>=i?o:0}function $(t,r){return ht(r,t)}const v=400,c=400,a=40,X=v-2*a,R=st().domain([5e3,5*w]).range([a,v-a]),W=st().domain([3,20]).range([c-a,a]);let u=1/0,x=-1/0;function pt(){const r=q(5e3,5*w,(5*w-5e3)/50).toArray(),d=q(3,20,17/50).toArray();for(const i of r)for(const e of d){const o=$(i,e);u=Math.min(u,o),x=Math.max(x,o)}u=Math.floor(u*10)/10,x=Math.ceil(x*10)/10,console.log(`Energy range: ${u} to ${x}`)}function yt(){S(b,[]),A=[],H()}function ut(t){if(l(E))return;const r=l(V).getBoundingClientRect(),d=t.clientX-r.left,i=t.clientY-r.top;if(d>=a&&d<=v-a&&i>=a&&i<=c-a){const e=R.invert(d),o=W.invert(i);S(_,e),S(T,o);const s=$(l(_),l(T));S(b,[...l(b),{angle:l(_),velocity:l(T),energy:s}]),mt(),B()}}function mt(){if(S(E,!0),l(b).length===0){S(E,!1);return}setTimeout(()=>{const t=l(b).map(n=>[n.angle,n.velocity]),r=l(b).map(n=>n.energy),d=(n,g)=>{const C=(n[0]-g[0])/1e4,G=(n[1]-g[1])/5;return Math.exp(-.5*(C*C+G*G))},i=t.length,e=dt(i,i);for(let n=0;n<i;n++)for(let g=0;g<i;g++)e.set([n,g],d(t[n],t[g]));const o=.01;for(let n=0;n<i;n++)e.set([n,n],e.get([n,n])+o);const s=40,f=q(5e3,5*w,(5*w-5e3)/s).toArray(),y=q(3,20,17/s).toArray();A=[];for(const n of f)for(const g of y){const C=[n,g],G=dt(1,i);for(let M=0;M<i;M++)G.set([0,M],d(C,t[M]));try{const M=Lt(e,r),Pt=jt(G,M).get([0,0]);A.push({angle:n,velocity:g,predicted:Pt})}catch(M){console.error("Error in GP calculation:",M)}}H(),S(E,!1)},50)}function H(){if(!l(V))return;const t=l(V).getContext("2d");t.clearRect(0,0,v,c);const r=Ht(ct).domain([x,u]).interpolator(ct);if(l(I)){const e=X/80;for(let o=0;o<80;o++)for(let s=0;s<80;s++){const f=5e3+(5*w-5e3)*o/80,y=3+17*s/80,n=$(f,y),g=R(f),C=W(y);t.fillStyle=r(n),t.fillRect(g-e/2,C-e/2,e,e)}}else if(A.length===0){const e=X/80;for(let o=0;o<80;o++)for(let s=0;s<80;s++){const f=5e3+(5*w-5e3)*o/80,y=3+17*s/80,n=R(f),g=W(y);t.fillStyle=r(0),t.fillRect(n-e/2,g-e/2,e,e)}}else{const i=X/Math.sqrt(A.length);A.forEach(e=>{const o=R(e.angle),s=W(e.velocity);t.fillStyle=r(e.predicted),t.fillRect(o-i/2,s-i/2,i,i)})}St(t,r),t.strokeStyle=P.primary,t.lineWidth=2,t.beginPath(),t.moveTo(a,c-a),t.lineTo(v-a,c-a),t.moveTo(a,a),t.lineTo(a,c-a),t.stroke(),t.fillStyle=P.text,t.font="bold 14px Arial, sans-serif",t.textAlign="center";const d=Math.round((5e3+5*w)/2);t.fillText("5000",a,c-a+15),t.fillText(d.toString(),v/2,c-a+15),t.fillText(String(5*w),v-a,c-a+15),t.fillText("impact parameter (km)",v-a+15,c-a+5),t.textAlign="right",t.fillText("3",a-5,c-a),t.fillText("11.5",a-5,c/2),t.fillText("20",a-5,a),t.fillText("Velocity (km/s)",a-15,a-10),l(b).forEach(i=>{const e=R(i.angle),o=W(i.velocity),s=8,f=t.createRadialGradient(e,o,2,e,o,s);f.addColorStop(0,P.highlight),f.addColorStop(1,"rgba(106, 137, 204, 0)"),t.fillStyle=f,t.beginPath(),t.arc(e,o,s,0,2*Math.PI),t.fill(),t.fillStyle=P.accent,t.beginPath(),t.arc(e,o,4,0,2*Math.PI),t.fill(),t.strokeStyle=P.primary,t.lineWidth=1,t.stroke()})}function St(t,r){const i=c-2*a,e=v-a+20,o=a,s=100,f=i/s;for(let n=0;n<s;n++){const g=u+(x-u)*(s-n-1)/s;t.fillStyle=r(g),t.fillRect(e,o+n*f,20,f+1)}t.strokeStyle=P.text,t.lineWidth=1,t.strokeRect(e,o,20,i),t.fillStyle=P.text,t.font="12px Arial, sans-serif",t.textAlign="left",t.fillText(u.toFixed(1),e+20+5,o+i),t.fillText(x.toFixed(1),e+20+5,o);const y=(u+x)/2;t.fillText(y.toFixed(1),e+20+5,o+i/2),t.save(),t.translate(e+20+25,o+i/2),t.rotate(-Math.PI/2),t.textAlign="center",t.fillText("Distance to Earth",0,0),t.restore()}function B(){if(!l(k))return;const t=l(k).getContext("2d");t.clearRect(0,0,v,c);const r=v/2,d=c/2,i=120;t.save(),t.translate(r,d),t.rotate(l(_)*Math.PI/180),t.beginPath();for(let s=0;s<=2*Math.PI;s+=.01){const f=i*Math.pow(Math.cos(s),3),y=i*Math.pow(Math.sin(s),3);s===0?t.moveTo(f,y):t.lineTo(f,y)}t.closePath(),t.fillStyle="rgba(200,200,200,0.3)",t.fill(),t.strokeStyle="#333",t.lineWidth=2,t.stroke();const e=l(T)*50;t.strokeStyle="#cc0000",t.lineWidth=2,t.beginPath(),t.moveTo(i,0),t.lineTo(i+e,0),t.stroke();const o=8;t.beginPath(),t.moveTo(i+e,0),t.lineTo(i+e-o,-8/2),t.lineTo(i+e-o,o/2),t.closePath(),t.fillStyle="#cc0000",t.fill(),t.fillStyle="#0066cc",t.beginPath(),t.arc(0,0,5,0,2*Math.PI),t.fill(),t.fillStyle="#00cc00",t.beginPath(),t.arc(i,0,5,0,2*Math.PI),t.fill(),t.restore(),t.fillStyle="#000",t.font="14px Arial",t.textAlign="left",t.fillText(`impact parameter: ${l(_).toFixed(0)} km`,20,30),t.fillText(`Velocity: ${l(T).toFixed(2)} km/s`,20,50)}function bt(){S(I,!l(I)),H()}$t(()=>{console.log("Astroid canvas:",l(k)),console.log("Contour canvas:",l(V)),pt(),B(),H()}),zt(()=>(l(k),l(_),l(T)),()=>{l(k)&&(l(_)!==void 0||l(T)!==void 0)&&B()}),At(),Gt();var O=Xt(),tt=m(h(O),2),Y=h(tt),D=m(h(Y),2);j(D,"width",v),j(D,"height",c),rt(D,t=>S(k,t),()=>l(k)),p(Y);var et=m(Y,2),K=m(h(et),2),F=h(K);j(F,"width",v+60),j(F,"height",c),rt(F,t=>S(V,t),()=>l(V)),p(K);var it=m(K,2),N=h(it),wt=h(N);p(N);var Z=m(N,2),xt=h(Z);p(Z);var J=m(Z,4),lt=h(J);{var _t=t=>{var r=qt();U("click",r,yt),nt(t,r)};Rt(lt,t=>{l(b).length>0&&t(_t)})}var Q=m(lt,2),Tt=h(Q,!0);p(Q),p(J);var ot=m(J,2),at=m(h(ot),2),Mt=h(at,!0);p(at),It(4),p(ot),p(it),p(et),p(tt),p(O),Vt(t=>{Wt(F,1,Ft(l(E)?"loading":""),"svelte-i0d8w"),L(wt,`Samples: ${l(b).length??""}`),L(xt,`Current energy: ${t??""}`),L(Tt,l(I)?"Show GP Prediction":"Show Energy Function"),L(Mt,l(I)?"Showing actual energy function":"Showing Gaussian Process prediction")},[()=>$(l(_),l(T)).toFixed(2)],Et),U("click",F,ut),U("click",Q,bt),nt(gt,O),Ct()}export{ee as component};
